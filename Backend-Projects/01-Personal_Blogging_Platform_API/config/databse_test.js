// Generated by CodiumAI

describe('connectDB', () => {

    // Successful database connection
    it('should log success message when connection is established', async () => {
        const sequelize = {
            authenticate: jest.fn().mockResolvedValueOnce()
        };
        console.log = jest.fn();
        const connectDB = async () => {
            try {
                await sequelize.authenticate();
                console.log('Connection established with the database');
            } catch (err) {
                console.error('Unable to connect to the database:', err);
                process.exit(1);
            }
        };
        await connectDB();
        expect(sequelize.authenticate).toHaveBeenCalled();
        expect(console.log).toHaveBeenCalledWith('Connection established with the database');
    });

    // Database authentication failure
    it('should log error message and exit process when connection fails', async () => {
        const sequelize = {
            authenticate: jest.fn().mockRejectedValueOnce(new Error('Connection error'))
        };
        console.error = jest.fn();
        process.exit = jest.fn();
        const connectDB = async () => {
            try {
                await sequelize.authenticate();
                console.log('Connection established with the database');
            } catch (err) {
                console.error('Unable to connect to the database:', err);
                process.exit(1);
            }
        };
        await connectDB();
        expect(sequelize.authenticate).toHaveBeenCalled();
        expect(console.error).toHaveBeenCalledWith('Unable to connect to the database:', new Error('Connection error'));
        expect(process.exit).toHaveBeenCalledWith(1);
    });
});
